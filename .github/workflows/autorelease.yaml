# Good example resources
# https://riggaroo.dev/using-github-actions-to-automate-our-release-process/
# https://blog.eizinger.io/12274/using-github-actions-to-automate-gitflow-style-releases

name: Auto-release

on:
  # Decide what the new version number will be
  workflow_dispatch:
    inputs:
      version_name:
        description: "One of major, minor, or patch"
        required: true

jobs:
  release:
    name: Create a new release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Pull latest commits of main branch
        run: |
          git checkout main
          git pull

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Install bump2version
        run: python -m pip install bumpversion  # installs bump2version

      - name: Dry run bumpversion
        run: |
          bumpversion --dry-run ${{ github.event.inputs.version_name }} --allow-dirty --verbose

      # This is lifted directly from the bump2version docs.
      # Version number will be saved in `env` section of each consecutive stage
      - name: Store new version number
        run: echo "version_number=`bumpversion --dry-run --list ${{ github.event.inputs.version_name }} | grep new_version | sed -r s,"^.*=",,`" >> $GITHUB_ENV

      - name: Display version_name and version_number
        run: |
          echo "version_name: ${{ github.event.inputs.version_name }}"
          echo "version_number: v${{ env.version_number}}"

      # See https://github.com/thomaseizinger/keep-a-changelog-new-release
      - name: Update Changelog
        uses: thomaseizinger/keep-a-changelog-new-release@v1
        with:
          version: v${{ env.version_number }}

      - name: Commit CHANGELOG updates
        run: |
          git config --global user.email "git@github.com"
          git config --global user.name "GitHub Bot"
          git add .
          git commit -m "Update CHANGELOG for auto-release v${{ env.version_number }}"

      - name: Ensure repo status is clean
        run: git status

      - name: Run bumpversion
        run: bumpversion ${{ github.event.inputs.version_name }} --verbose

      - name: Push changes with tags
        run: git push && git push --tags

      - name: Create release in GitHub repo
        uses: ncipollo/release-action@v1
        with:
            body: "Contribution details can be found in CHANGELOG.rst"
            token: {{ secrets.GITHUB_TOKEN }}
            tag: v${{ env.version_number}}"

      - name: Ensure complete
        run: echo "Auto-release complete!"
